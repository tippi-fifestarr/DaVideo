{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","dvideo.png","components/Main.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ipfs","require","ipfsClient","host","port","protocol","Component","componentWillMount","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","DaVideo","networks","davideo","Contract","abi","address","methods","videoCount","call","videosCount","i","videos","video","state","latest","currentHash","hash","currentTitle","title","loading","constructor","props","super","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","this","buffer","Buffer","result","console","log","uploadVideo","add","error","send","from","on","changeVideo","bind","id","className","Navbar","href","rel","src","dvideo","width","height","alt","Identicon","toString","module","exports","Main","style","maxHeight","controls","minWidth","onSubmit","videoTitle","value","type","accept","onChange","ref","input","placeholder","required","map","key","onClick"],"mappings":"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","file":"static/js/main.c5532f22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react';\r\nimport DaVideo from '../abis/DaVideo.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\n//Declare IPFS\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = DaVideo.networks[networkId]\r\n    if(networkData) {\r\n      const davideo = new web3.eth.Contract(DaVideo.abi, networkData.address)\r\n      this.setState({ davideo })\r\n      const videosCount = await davideo.methods.videoCount().call()\r\n      this.setState({ videosCount })\r\n\r\n      // Load videos, sort by newest\r\n      for (var i=videosCount; i>=1; i--) {\r\n        const video = await davideo.methods.videos(i).call()\r\n        this.setState({\r\n          videos: [...this.state.videos, video]\r\n        })\r\n      }\r\n\r\n      //Set latest video with title to view as default \r\n      const latest = await davideo.methods.videos(videosCount).call()\r\n      this.setState({\r\n        currentHash: latest.hash,\r\n        currentTitle: latest.title\r\n      })\r\n      this.setState({ loading: false})\r\n    } else {\r\n      window.alert('DaVideo contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  captureFile = event => {\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n\r\n  uploadVideo = title => {\r\n    console.log(\"Submitting file to IPFS...\")\r\n\r\n    //adding file to the IPFS\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('IPFS result', result)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n\r\n      this.setState({ loading: true })\r\n      this.state.davideo.methods.uploadVideo(result[0].hash, title).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: false })\r\n      })\r\n    })\r\n  }\r\n\r\n  changeVideo = (hash, title) => {\r\n    this.setState({'currentHash': hash});\r\n    this.setState({'currentTitle': title});\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      buffer: null,\r\n      account: '',\r\n      davideo: null,\r\n      videos: [],\r\n      loading: true,\r\n      currentHash: null,\r\n      currentTitle: null\r\n    }\r\n\r\n    this.uploadVideo = this.uploadVideo.bind(this)\r\n    this.captureFile = this.captureFile.bind(this)\r\n    this.changeVideo = this.changeVideo.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar \r\n          account={this.state.account}\r\n        />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n              videos={this.state.videos}\r\n              uploadVideo={this.uploadVideo}\r\n              captureFile={this.captureFile}\r\n              changeVideo={this.changeVideo}\r\n              currentHash={this.state.currentHash}\r\n              currentTitle={this.state.currentTitle}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport dvideo from '../dvideo.png'\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow text-monospace\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"http://www.boober.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src={dvideo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          &nbsp;DaVid30S // Tippi Fifestarr || Wingbird \r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            { this.props.account\r\n              ? <img\r\n                className='ml-2'\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n                alt=\"\"\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","module.exports = __webpack_public_path__ + \"static/media/dvideo.9e02a88e.png\";","import React, { Component } from 'react';\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid text-monospace\">\r\n          <br></br>\r\n          &nbsp;\r\n          <br></br>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-10\">\r\n              <div className=\"embed-responsive embed-responsive-16by9\" style={{ maxHeight: '768px'}}>\r\n                <video\r\n                  src={`https://ipfs.infura.io/ipfs/${this.props.currentHash}`}\r\n                  controls\r\n                >\r\n                </video>\r\n              </div>\r\n            <h3><b><i>{this.props.currentTitle}</i></b></h3>\r\n          </div>\r\n          <div className=\"col-md-2 border border-danger overflow-auto text-center\" style={{ maxHeight: '768px', minWidth: '175px' }}>\r\n            <h5><b>Share Video</b></h5>\r\n            <form onSubmit={(event) => {\r\n              event.preventDefault()\r\n              const title = this.videoTitle.value\r\n              this.props.uploadVideo(title)\r\n            }} >\r\n              &nbsp;\r\n              <input type='file' accept=\".mp4, .mkv .ogg .wmv\" onChange={this.props.captureFile} style={{ width: '250px' }} />\r\n                <div className=\"form-group mr-sm-2\">\r\n                  <input\r\n                    id=\"videoTitle\"\r\n                    type=\"text\"\r\n                    ref={(input) => { this.videoTitle = input }}\r\n                    className=\"form-control-sm\"\r\n                    placeholder=\"Title...\"\r\n                    required />\r\n                </div>\r\n              <button type=\"submit\" className=\"btn btn-danger btn-block btn-sm\">Upload!</button>\r\n              &nbsp;\r\n            </form>\r\n            { this.props.videos.map((video, key) => {\r\n              return(\r\n                <div className=\"card mb-4 text-center bg-secondary mx-auto\" style={{ width: '175px'}} key={key} >\r\n                  <div className=\"card-title bg-dark\">\r\n                    <small className=\"text-white\"><b>{video.title}</b></small>\r\n                  </div>\r\n                  <div>\r\n                    <p onClick={() => this.props.changeVideo(video.hash, video.title)}>\r\n                      <video\r\n                        src={`https://ipfs.infura.io/ipfs/${video.hash}`}\r\n                        style={{ width: '150px' }}\r\n                      />\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}